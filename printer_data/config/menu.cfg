[menu __main __octoprint]
type: disabled

[menu __main __filament]
type: disabled

[menu __main __setup]
type: disabled

[menu __main __temp __preheat_pla]
type: disabled

[menu __main __temp __preheat_abs]
type: disabled

[menu __main __temp __cooldown]
type: disabled


### menu main ###
[menu __main]
type: list
name: Main

### menu virtual sdcard ###
[menu __main __sdcard]
type: vsdlist
enable: {('virtual_sdcard' in printer)}
name: SD Card

[menu __main __sdcard __start]
type: command
enable: {('virtual_sdcard' in printer) and printer.virtual_sdcard.file_path and not printer.virtual_sdcard.is_active}
name: Start printing
gcode: M24

[menu __main __sdcard __resume]
type: command
enable: {('virtual_sdcard' in printer) and printer.print_stats.state == "paused"}
name: Resume printing
gcode:
    {% if "pause_resume" in printer %}
        RESUME
    {% else %}
        M24
    {% endif %}

[menu __main __sdcard __pause]
type: command
enable: {('virtual_sdcard' in printer) and printer.print_stats.state == "printing"}
name: Pause printing
gcode:
    {% if "pause_resume" in printer %}
        PAUSE
    {% else %}
        M25
    {% endif %}

[menu __main __sdcard __cancel]
type: command
enable: {('virtual_sdcard' in printer) and (printer.print_stats.state == "printing" or printer.print_stats.state == "paused")}
name: Cancel printing
gcode:
    {% if 'pause_resume' in printer %}
        CANCEL_PRINT
    {% else %}
        M25
        M27
        M26 S0
        TURN_OFF_HEATERS
        {% if printer.toolhead.position.z <= printer.toolhead.axis_maximum.z - 5 %}
            G91
            G0 Z5 F1000
            G90
        {% endif %}
    {% endif %}


### menu control ###
[menu __main __control]
type: list
name: Control

[menu __main __control __home]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Home All
gcode: G28

[menu __main __control __homez]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Home Z
gcode: G28 Z

[menu __main __control __homexy]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Home X/Y
gcode: G28 X Y

[menu __main __control __quad_gantry_level]
type: command
enable: {not printer.idle_timeout.state == "Printing" and ('quad_gantry_level' in printer)}
name: Quad Gantry Lvl
gcode: QUAD_GANTRY_LEVEL

[menu __main __control __disable]
type: command
name: Steppers off
gcode:
    M84
    M18



### menu tune ###
[menu __main __tune]
type: list
enable: {printer.idle_timeout.state == "Printing"}
name: Tune

[menu __main __tune __speed]
type: input
name: Speed: {'%3d' % (menu.input*100)}%
input: {printer.gcode_move.speed_factor}
input_min: 0.01
input_max: 5
input_step: 0.01
realtime: True
gcode:
    M220 S{'%d' % (menu.input*100)}

[menu __main __tune __flow]
type: input
name: Flow: {'%3d' % (menu.input*100)}%
input: {printer.gcode_move.extrude_factor}
input_min: 0.01
input_max: 2
input_step: 0.01
realtime: True
gcode:
    M221 S{'%d' % (menu.input*100)}

### menu temperature ###
[menu __main __temp]
type: list
name: Temperature

[menu __main __temp __hotend0_target]
type: input
enable: {('extruder' in printer) and ('extruder' in printer.heaters.available_heaters)}
name: {"Ex0:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
input: {printer.extruder.target}
input_min: 0
input_max: {printer.configfile.config.extruder.max_temp}
input_step: 1
gcode: M104 T0 S{'%.0f' % menu.input}

[menu __main __temp __hotend1_target]
type: input
enable: {('extruder1' in printer) and ('extruder1' in printer.heaters.available_heaters)}
name: {"Ex1:%3.0f (%4.0f)" % (menu.input, printer.extruder1.temperature)}
input: {printer.extruder1.target}
input_min: 0
input_max: {printer.configfile.config.extruder1.max_temp}
input_step: 1
gcode: M104 T1 S{'%.0f' % menu.input}

[menu __main __temp __hotend2_target]
type: input
enable: {('extruder2' in printer) and ('extruder2' in printer.heaters.available_heaters)}
name: {"Ex2:%3.0f (%4.0f)" % (menu.input, printer.extruder2.temperature)}
input: {printer.extruder2.target}
input_min: 0
input_max: {printer.configfile.config.extruder2.max_temp}
input_step: 1
gcode: M104 T2 S{'%.0f' % menu.input}

[menu __main __temp __hotend3_target]
type: input
enable: {('extruder3' in printer) and ('extruder3' in printer.heaters.available_heaters)}
name: {"Ex3:%3.0f (%4.0f)" % (menu.input, printer.extruder3.temperature)}
input: {printer.extruder3.target}
input_min: 0
input_max: {printer.configfile.config.extruder3.max_temp}
input_step: 1
gcode: M104 T3 S{'%.0f' % menu.input}

[menu __main __temp __heaters_off]
type: command
name: Hotends off
enable: {not printer.idle_timeout.state == "Printing"}
gcode: TURN_OFF_HEATERS

[menu __main __temp __hotbed_target]
type: input
enable: {'heater_bed' in printer}
name: {"Bed:%3.0f (%4.0f)" % (menu.input, printer.heater_bed.temperature)}
input: {printer.heater_bed.target}
input_min: 0
input_max: {printer.configfile.config.heater_bed.max_temp}
input_step: 1
gcode: M140 S{'%.0f' % menu.input}

### menu Tools###
[menu __main __tools]
type: list
name: Tools

[menu __main __tools __t0]
type: command
name: Tool 0
enable: {not printer.idle_timeout.state == "Printing"}
gcode: T0

[menu __main __tools __t1]
type: command
name: Tool 1
enable: {not printer.idle_timeout.state == "Printing"}
gcode: T1

[menu __main __tools __t2]
type: command
name: Tool 2
enable: {not printer.idle_timeout.state == "Printing"}
gcode: T2

[menu __main __tools __t3]
type: command
name: Tool 3
enable: {not printer.idle_timeout.state == "Printing"}
gcode: T3

### menu Tools###
[menu __main __macros]
type: list
name: Macros

[menu __main __macros __tcd]
type: command
name: Tool change demo
enable: {not printer.idle_timeout.state == "Printing"}
gcode: TOOLCHANGE_DEMO

[menu __main __macros __loadc]
type: command
name: Load filament
enable: {not printer.idle_timeout.state == "Printing"}
gcode: LOAD_FILAMENT

[menu __main __macros __unloadc]
type: command
name: Unload current filament
enable: {not printer.idle_timeout.state == "Printing"}
gcode: UNLOAD_FILAMENT

#[menu __main __macros __unload1]
#type: input
#name: Unload 1 filament
#enable: {not printer.idle_timeout.state == "Printing"}
#input: {printer.tool.unload}
#input_min: 0
#input_max: 3
#input_step: 1
#gcode: UNLOAD_ONE_FILAMENT TOOL={'%.0f' % menu.input}
